<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="emcy_8h" kind="file" language="C++">
    <compoundname>emcy.h</compoundname>
    <includes refid="message_8h" local="yes">message.h</includes>
    <includedby refid="_c_a_nopen__socket_8h" local="yes">CANopen_socket.h</includedby>
    <includedby refid="emcy_8cpp" local="yes">emcy.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>emcy.h</label>
        <link refid="emcy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="6">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="9">
        <label>linux/can.h</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="5">
        <label>sstream</label>
      </node>
      <node id="2">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>payload.h</label>
        <link refid="payload_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12">
        <label>CANopen_driver.cpp</label>
        <link refid="_c_a_nopen__driver_8cpp_source"/>
      </node>
      <node id="15">
        <label>CANopen_socket.cpp</label>
        <link refid="_c_a_nopen__socket_8cpp_source"/>
      </node>
      <node id="1">
        <label>emcy.h</label>
        <link refid="emcy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>parameter.cpp</label>
        <link refid="parameter_8cpp_source"/>
      </node>
      <node id="8">
        <label>mainwindow.cpp</label>
        <link refid="mainwindow_8cpp_source"/>
      </node>
      <node id="13">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>platform.cpp</label>
        <link refid="platform_8cpp_source"/>
      </node>
      <node id="7">
        <label>main.cpp</label>
        <link refid="src_2main_8cpp_source"/>
      </node>
      <node id="16">
        <label>main.cpp</label>
        <link refid="lib_2lxm32_2lib_2canopen_2src_2main_8cpp_source"/>
      </node>
      <node id="2">
        <label>CANopen_socket.h</label>
        <link refid="_c_a_nopen__socket_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>platform.hpp</label>
        <link refid="platform_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>CANopen_lxm32.h</label>
        <link refid="_c_a_nopen__lxm32_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>CANopen_driver.h</label>
        <link refid="_c_a_nopen__driver_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>main.cpp</label>
        <link refid="lib_2lxm32_2src_2main_8cpp_source"/>
      </node>
      <node id="17">
        <label>emcy.cpp</label>
        <link refid="emcy_8cpp_source"/>
      </node>
      <node id="10">
        <label>CANopen_lxm32.cpp</label>
        <link refid="_c_a_nopen__lxm32_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_c_a_nopen_1_1_e_m_c_y_message" prot="public">CANopen::EMCYMessage</innerclass>
    <innernamespace refid="namespace_c_a_nopen">CANopen</innernamespace>
    <briefdescription>
<para>PDO message sent and received throught CANopen socket. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Florian Richer &amp; Alexis Devillard </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_CANOPEN_EMCY_MESSAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CANOPEN_EMCY_MESSAGE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="message_8h" kindref="compound">message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">CANopen<sp/>{</highlight></codeline>
<codeline lineno="17" refid="class_c_a_nopen_1_1_e_m_c_y_message" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_a_nopen_1_1_e_m_c_y_message" kindref="compound">EMCYMessage</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_c_a_nopen_1_1_message" kindref="compound">Message</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_a_nopen_1_1_e_m_c_y_message" kindref="compound">EMCYMessage</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_a_nopen_1_1_e_m_c_y_message" kindref="compound">EMCYMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_frame<sp/>&amp;other);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>code()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>CANopen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_CANOPEN_NMT_MESSAGE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/adev/Documents/STECH/stewart_platform/lib/lxm32/lib/canopen/include/emcy.h"/>
  </compounddef>
</doxygen>
