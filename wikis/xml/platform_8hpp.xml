<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="platform_8hpp" kind="file" language="C++">
    <compoundname>platform.hpp</compoundname>
    <includes refid="_c_a_nopen__lxm32_8h" local="yes">CANopen_lxm32.h</includes>
    <includes refid="model_8hpp" local="yes">model.hpp</includes>
    <includes local="no">eigen3/Eigen/Dense</includes>
    <includes local="no">chrono</includes>
    <includedby refid="mainwindow_8h" local="yes">mainwindow.h</includedby>
    <includedby refid="platform_8cpp" local="yes">platform.cpp</includedby>
    <incdepgraph>
      <node id="21">
        <label>emcy.h</label>
        <link refid="emcy_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cstdint</label>
      </node>
      <node id="19">
        <label>pdo.h</label>
        <link refid="pdo_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>stdexcept</label>
      </node>
      <node id="30">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="7">
        <label>linux/can/raw.h</label>
      </node>
      <node id="25">
        <label>map</label>
      </node>
      <node id="22">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>linux/can.h</label>
      </node>
      <node id="29">
        <label>model.hpp</label>
        <link refid="model_8hpp_source"/>
      </node>
      <node id="4">
        <label>CANopen_socket.h</label>
        <link refid="_c_a_nopen__socket_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>unistd.h</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="18">
        <label>sdo.h</label>
        <link refid="sdo_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>platform.hpp</label>
        <link refid="platform_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>CANopen_lxm32.h</label>
        <link refid="_c_a_nopen__lxm32_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>nmt.h</label>
        <link refid="nmt_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>mutex</label>
      </node>
      <node id="31">
        <label>chrono</label>
      </node>
      <node id="8">
        <label>sys/socket.h</label>
      </node>
      <node id="3">
        <label>CANopen_driver.h</label>
        <link refid="_c_a_nopen__driver_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>thread</label>
      </node>
      <node id="23">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>payload.h</label>
        <link refid="payload_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="10">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>mainwindow.cpp</label>
        <link refid="mainwindow_8cpp_source"/>
      </node>
      <node id="5">
        <label>platform.cpp</label>
        <link refid="platform_8cpp_source"/>
      </node>
      <node id="3">
        <label>main.cpp</label>
        <link refid="src_2main_8cpp_source"/>
      </node>
      <node id="1">
        <label>platform.hpp</label>
        <link refid="platform_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classstp_1_1_platform" prot="public">stp::Platform</innerclass>
    <innernamespace refid="namespacestp">stp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PLATFORM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PLATFORM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_c_a_nopen__lxm32_8h" kindref="compound">CANopen_lxm32.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;model.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eigen3/Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">chr<sp/>=<sp/>std::chrono;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">stp</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="classstp_1_1_platform" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classstp_1_1_platform" kindref="compound">Platform</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classstp_1_1_model" kindref="compound">Model</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classstp_1_1_platform" kindref="compound">Platform</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltas[4],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbose_level=0)<sp/>:<sp/><ref refid="classstp_1_1_model" kindref="compound">Model</ref>(deltas,<sp/>a,<sp/>l,<sp/>verbose_level){};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>start();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>pause();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>stop();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>new_pos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>T[3],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta[3]);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>update_platform();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="classstp_1_1_platform_1ae430bcbcc69c375c2b63fdcb391af235" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_a_nopen_1_1_l_x_m32" kindref="compound">CANopen::LXM32</ref><sp/>*<ref refid="classstp_1_1_platform_1ae430bcbcc69c375c2b63fdcb391af235" kindref="member">m_motors</ref>[NB_LEGS];<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_available;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_motor_pos[NB_LEGS];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_motor_lookup[NB_LEGS]<sp/>=<sp/>{5,<sp/>2,<sp/>0,<sp/>1,<sp/>4,<sp/>3};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>m_motor_position_offset[NB_LEGS]<sp/>=<sp/>{<sp/>94500+2*737280,<sp/>202100+2*737280,<sp/>202500+2*737280,<sp/>694800+2*737280,<sp/>203500+2*737280,<sp/>236000+2*737280};</highlight><highlight class="comment">//1:207900</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v=0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t=0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>stp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/adev/Documents/STECH/stewart_platform/include/platform.hpp"/>
  </compounddef>
</doxygen>
