<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="parameter_8cpp" kind="file" language="C++">
    <compoundname>parameter.cpp</compoundname>
    <includes refid="parameter_8h" local="yes">parameter.h</includes>
    <incdepgraph>
      <node id="20">
        <label>emcy.h</label>
        <link refid="emcy_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>parameter.cpp</label>
        <link refid="parameter_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="18">
        <label>pdo.h</label>
        <link refid="pdo_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="6">
        <label>linux/can/raw.h</label>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="2">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>linux/can.h</label>
      </node>
      <node id="3">
        <label>CANopen_socket.h</label>
        <link refid="_c_a_nopen__socket_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="17">
        <label>sdo.h</label>
        <link refid="sdo_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sstream</label>
      </node>
      <node id="19">
        <label>nmt.h</label>
        <link refid="nmt_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mutex</label>
      </node>
      <node id="7">
        <label>sys/socket.h</label>
      </node>
      <node id="24">
        <label>thread</label>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>payload.h</label>
        <link refid="payload_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="9">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parameter_8h" kindref="compound">parameter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="struct_c_a_nopen_1_1_parameter_1a6f66686b516733d6506e8efdedd67862" refkind="member"><highlight class="normal"><ref refid="struct_c_a_nopen_1_1_parameter_1a6f66686b516733d6506e8efdedd67862" kindref="member">CANopen::Parameter::link_to_pdo</ref>(<ref refid="struct_c_a_nopen_1_1_parameter_1a4870a26654749daa1ef95bdcb6d01d59" kindref="member">PDOFunctionCode</ref><sp/>fn,<sp/>int8_t<sp/>slot)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pdo_slot<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdo_fn<sp/>=<sp/>fn;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdo_slot<sp/>=<sp/>slot;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal">};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="struct_c_a_nopen_1_1_parameter_1a2a80caa7af7b8df1ee93999e27f493f6" refkind="member"><highlight class="normal"><ref refid="struct_c_a_nopen_1_1_parameter_1a2a80caa7af7b8df1ee93999e27f493f6" kindref="member">CANopen::Parameter::from_payload</ref>(<ref refid="class_c_a_nopen_1_1_payload" kindref="compound">Payload</ref><sp/>&amp;p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>received_data)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(slot<sp/>+<sp/>size<sp/>&lt;=<sp/>p.size())<sp/>{<sp/></highlight><highlight class="comment">//ensure<sp/>the<sp/>payload<sp/>contain<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(size)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//store<sp/>the<sp/>received<sp/>value<sp/>in<sp/>the<sp/>coresponding<sp/>parameter<sp/>(with<sp/>the<sp/>right<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(p.<ref refid="class_c_a_nopen_1_1_payload_1aef05ef8cfc8b9ba4170891f3168a726b" kindref="member">value</ref>&lt;uint8_t&gt;(slot),</highlight><highlight class="keyword">true</highlight><highlight class="normal">,received_data);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(p.<ref refid="class_c_a_nopen_1_1_payload_1aef05ef8cfc8b9ba4170891f3168a726b" kindref="member">value</ref>&lt;uint16_t&gt;(slot),</highlight><highlight class="keyword">true</highlight><highlight class="normal">,received_data);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set(p.<ref refid="class_c_a_nopen_1_1_payload_1aef05ef8cfc8b9ba4170891f3168a726b" kindref="member">value</ref>&lt;uint32_t&gt;(slot),</highlight><highlight class="keyword">true</highlight><highlight class="normal">,received_data);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="class_c_a_nopen_1_1_payload" kindref="compound">CANopen::Payload</ref></highlight></codeline>
<codeline lineno="29" refid="struct_c_a_nopen_1_1_parameter_1a0b5d5729fe8b242797e0ab7b49d4519d" refkind="member"><highlight class="normal"><ref refid="struct_c_a_nopen_1_1_parameter_1a0b5d5729fe8b242797e0ab7b49d4519d" kindref="member">CANopen::Parameter::payload</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>should_be_sent)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(should_be_sent!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*should_be_sent=m_should_be_sent;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_should_be_sent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;((uint8_t<sp/>*)var,<sp/>(uint8_t<sp/>*)var<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_c_a_nopen_1_1_parameter_1a6423121211fcdcdfc086d36217872fce" refkind="member"><highlight class="normal"><ref refid="struct_c_a_nopen_1_1_parameter_1a6423121211fcdcdfc086d36217872fce" kindref="member">CANopen::Parameter::callback</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_cb!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cb(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/adev/Documents/STECH/stewart_platform/lib/lxm32/src/parameter.cpp"/>
  </compounddef>
</doxygen>
